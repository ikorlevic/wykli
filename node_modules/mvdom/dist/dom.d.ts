export declare type Append = "first" | "last" | "empty" | "before" | "after";
declare type HTMLElementOrFragment = HTMLElement | DocumentFragment;
export declare function first(el: HTMLElementOrFragment | null | undefined, selector: string): HTMLElement | null;
export declare function first(selector: string): HTMLElement | null;
export declare function first(el: HTMLElementOrFragment | null | undefined): HTMLElement | null;
export declare function all(el: HTMLElementOrFragment | null | undefined, selector: string): HTMLElement[];
export declare function all(selector: string): HTMLElement[];
export declare function next(el: Node | null | undefined, selector?: string): HTMLElement | null;
export declare function prev(el: Node | null | undefined, selector?: string): HTMLElement | null;
export declare function closest(el: HTMLElement | null | undefined, selector: string): HTMLElement | null;
export declare function append(this: any, refEl: HTMLElementOrFragment, newEl: HTMLElementOrFragment, position?: Append): HTMLElement;
export declare function frag(html: string | null | undefined): DocumentFragment;
export {};
